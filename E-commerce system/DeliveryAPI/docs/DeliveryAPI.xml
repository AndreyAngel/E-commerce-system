<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DeliveryAPI</name>
    </assembly>
    <members>
        <member name="T:DeliveryAPI.Consumers.CreateCourierConsumer">
            <summary>
            Consumer of the message about creating of the user with courier role
            </summary>
        </member>
        <member name="F:DeliveryAPI.Consumers.CreateCourierConsumer._service">
            <summary>
            Object of class <see cref="T:DeliveryAPI.Services.ICourierService"/> providing the APIs for managing courier in a persistence store.
            </summary>
        </member>
        <member name="F:DeliveryAPI.Consumers.CreateCourierConsumer._mapper">
            <summary>
            Object of class <see cref="T:AutoMapper.IMapper"/> for models mapping
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:DeliveryAPI.Consumers.CreateCourierConsumer.#ctor(DeliveryAPI.Services.ICourierService,AutoMapper.IMapper)" -->
        <member name="M:DeliveryAPI.Consumers.CreateCourierConsumer.Consume(MassTransit.ConsumeContext{Infrastructure.DTO.CourierDTORabbitMQ})">
            <inheritdoc/>
        </member>
        <member name="T:DeliveryAPI.Consumers.CreateDeliveryConsumer">
            <summary>
            Consumer of the message about creating of the order with delivery
            </summary>
        </member>
        <member name="F:DeliveryAPI.Consumers.CreateDeliveryConsumer._service">
            <summary>
            Object of class <see cref="T:DeliveryAPI.Services.ICourierService"/> providing the APIs for managing delivery in a persistence store.
            </summary>
        </member>
        <member name="F:DeliveryAPI.Consumers.CreateDeliveryConsumer._mapper">
            <summary>
            Object of class <see cref="T:AutoMapper.IMapper"/> for models mapping
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:DeliveryAPI.Consumers.CreateDeliveryConsumer.#ctor(DeliveryAPI.Services.IDeliveryService,AutoMapper.IMapper)" -->
        <member name="M:DeliveryAPI.Consumers.CreateDeliveryConsumer.Consume(MassTransit.ConsumeContext{Infrastructure.DTO.DeliveryDTORabbitMQ})">
            <inheritdoc/>
        </member>
        <member name="T:DeliveryAPI.DataBase.Context">
            <summary>
            Class for the Entity Framework database context
            </summary>
        </member>
        <member name="M:DeliveryAPI.DataBase.Context.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{DeliveryAPI.DataBase.Context})">
            <summary>
            Creates an instance of the <see cref="T:DeliveryAPI.DataBase.Context"/>.
            </summary>
            <param name="options"> <see cref="T:Microsoft.EntityFrameworkCore.DbContextOptions`1"/> </param>
        </member>
        <member name="T:DeliveryAPI.DataBase.Entities.Address">
            <summary>
            Delivery address
            </summary>
        </member>
        <member name="P:DeliveryAPI.DataBase.Entities.Address.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:DeliveryAPI.DataBase.Entities.Address.City">
            <summary>
            City
            </summary>
        </member>
        <member name="P:DeliveryAPI.DataBase.Entities.Address.Street">
            <summary>
            Street
            </summary>
        </member>
        <member name="P:DeliveryAPI.DataBase.Entities.Address.NumberOfHome">
            <summary>
            Number of home
            </summary>
        </member>
        <member name="P:DeliveryAPI.DataBase.Entities.Address.ApartmentNumber">
            <summary>
            Apartment number
            </summary>
        </member>
        <member name="P:DeliveryAPI.DataBase.Entities.Address.PostalCode">
            <summary>
            Postal code
            </summary>
        </member>
        <member name="T:DeliveryAPI.Helpers.AuthorizeHandler">
            <summary>
            User authorization handler
            </summary>
        </member>
        <member name="M:DeliveryAPI.Helpers.AuthorizeHandler.HandleRequirementAsync(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext,Microsoft.AspNetCore.Authorization.Infrastructure.RolesAuthorizationRequirement)">
            <inheritdoc/>
        </member>
        <member name="T:DeliveryAPI.Helpers.CustomAuthenticateMiddleware">
            <summary>
            Middleware adding user in context items
            </summary>
        </member>
        <member name="F:DeliveryAPI.Helpers.CustomAuthenticateMiddleware._next">
            <summary>
            Request delegate
            </summary>
        </member>
        <member name="M:DeliveryAPI.Helpers.CustomAuthenticateMiddleware.#ctor(Microsoft.AspNetCore.Http.RequestDelegate)">
            <summary>
            Initializes a new instance of <see cref="T:DeliveryAPI.Helpers.CustomAuthenticateMiddleware"/>.
            </summary>
            <param name="next">The next item in the middleware pipeline.</param>
        </member>
        <member name="M:DeliveryAPI.Helpers.CustomAuthenticateMiddleware.Invoke(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            Invokes the middleware performing authentication.
            </summary>
            <param name="context">The <see cref="T:Microsoft.AspNetCore.Http.HttpContext"/>.</param>
        </member>
        <member name="T:DeliveryAPI.Helpers.MappingProfile">
            <summary>
            Class for models mapping
            </summary>
        </member>
        <member name="M:DeliveryAPI.Helpers.MappingProfile.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:DeliveryAPI.Helpers.MappingProfile"/>.
            </summary>
        </member>
        <member name="T:DeliveryAPI.Migrations.Initial">
            <inheritdoc />
        </member>
        <member name="M:DeliveryAPI.Migrations.Initial.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:DeliveryAPI.Migrations.Initial.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:DeliveryAPI.Migrations.Initial.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="P:DeliveryAPI.Models.DTO.AddressDTORequest.City">
            <summary>
            City
            </summary>
        </member>
        <member name="P:DeliveryAPI.Models.DTO.AddressDTORequest.Street">
            <summary>
            Street
            </summary>
        </member>
        <member name="P:DeliveryAPI.Models.DTO.AddressDTORequest.NumberOfHome">
            <summary>
            Number of home
            </summary>
        </member>
        <member name="P:DeliveryAPI.Models.DTO.AddressDTORequest.ApartmentNumber">
            <summary>
            Apartment number
            </summary>
        </member>
        <member name="P:DeliveryAPI.Models.DTO.AddressDTORequest.PostalCode">
            <summary>
            Postal code
            </summary>
        </member>
        <member name="T:DeliveryAPI.Models.Role">
            <summary>
            User role
            </summary>
        </member>
        <member name="F:DeliveryAPI.Models.Role.Admin">
            <summary>
            Administrator
            </summary>
        </member>
        <member name="F:DeliveryAPI.Models.Role.Buyer">
            <summary>
            Buyer
            </summary>
        </member>
        <member name="F:DeliveryAPI.Models.Role.Salesman">
            <summary>
            Salesman
            </summary>
        </member>
        <member name="F:DeliveryAPI.Models.Role.Courier">
            <summary>
            Courier
            </summary>
        </member>
        <member name="M:DeliveryAPI.Services.CourierService.ThrowIfDisposed">
            <summary>
            Throws if this class has been disposed.
            </summary>
        </member>
        <member name="F:DeliveryAPI.Services.DeliveryService._disposed">
            <summary>
            True, if object is disposed
            False, if object isn't disposed
            </summary>
        </member>
        <member name="M:DeliveryAPI.Services.DeliveryService.ThrowIfDisposed">
            <summary>
            Throws if this class has been disposed.
            </summary>
        </member>
        <member name="T:DeliveryAPI.UnitOfWork.CourierRepository">
            <summary>
            The courier repository class containing methods for interaction with the database
            </summary>
        </member>
        <member name="M:DeliveryAPI.UnitOfWork.CourierRepository.#ctor(DeliveryAPI.DataBase.Context)">
            <summary>
            Creates an instance of the <see cref="T:DeliveryAPI.UnitOfWork.DeliveryRepository"/>.
            </summary>
            <param name="context"> Database context </param>
        </member>
        <member name="T:DeliveryAPI.UnitOfWork.DeliveryRepository">
            <summary>
            The delivery repository class containing methods for interaction with the database
            </summary>
        </member>
        <member name="M:DeliveryAPI.UnitOfWork.DeliveryRepository.#ctor(DeliveryAPI.DataBase.Context)">
            <summary>
            Creates an instance of the <see cref="T:DeliveryAPI.UnitOfWork.DeliveryRepository"/>.
            </summary>
            <param name="context"> Database context </param>
        </member>
        <member name="T:DeliveryAPI.UnitOfWork.GenericRepository`1">
            <summary>
            The generic repository class containing methods for interaction with the database
            </summary>
            <typeparam name="TEntity"> Entity type </typeparam>
        </member>
        <member name="F:DeliveryAPI.UnitOfWork.GenericRepository`1._context">
            <summary>
            Database context
            </summary>
        </member>
        <member name="F:DeliveryAPI.UnitOfWork.GenericRepository`1._disposed">
            <summary>
            True, if object is disposed
            False, if object isn't disposed
            </summary>
        </member>
        <member name="M:DeliveryAPI.UnitOfWork.GenericRepository`1.#ctor(DeliveryAPI.DataBase.Context)">
            <summary>
            Creates an instance of the <see cref="T:DeliveryAPI.UnitOfWork.GenericRepository`1"/>.
            </summary>
            <param name="context"> Database context </param>
        </member>
        <member name="M:DeliveryAPI.UnitOfWork.GenericRepository`1.GetAll">
            <inheritdoc/>
        </member>
        <member name="M:DeliveryAPI.UnitOfWork.GenericRepository`1.Include(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <inheritdoc/>
        </member>
        <member name="M:DeliveryAPI.UnitOfWork.GenericRepository`1.GetById(System.Guid)">
            <inheritdoc/>
        </member>
        <member name="M:DeliveryAPI.UnitOfWork.GenericRepository`1.AddAsync(`0)">
            <inheritdoc/>
        </member>
        <member name="M:DeliveryAPI.UnitOfWork.GenericRepository`1.UpdateAsync(`0)">
            <inheritdoc/>
        </member>
        <member name="M:DeliveryAPI.UnitOfWork.GenericRepository`1.RemoveAsync(`0)">
            <inheritdoc/>
        </member>
        <member name="M:DeliveryAPI.UnitOfWork.GenericRepository`1.Dispose">
            <inheritdoc/>
        </member>
        <member name="M:DeliveryAPI.UnitOfWork.GenericRepository`1.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:DeliveryAPI.UnitOfWork.GenericRepository`1.ThrowIfDisposed">
            <summary>
            Throws if this class has been disposed.
            </summary>
        </member>
        <member name="T:DeliveryAPI.UnitOfWork.Interfaces.ICourierRepository">
            <summary>
            Interface for the courier repository class containing methods for interaction with the database
            </summary>
        </member>
        <member name="T:DeliveryAPI.UnitOfWork.Interfaces.IDeliveryRepository">
            <summary>
            Interface for the delivery repository class containing methods for interaction with the database
            </summary>
        </member>
        <member name="T:DeliveryAPI.UnitOfWork.Interfaces.IGenericRepositoty`1">
            <summary>
            Interface for the generic repository class containing methods for interaction with the database
            </summary>
            <typeparam name="TEntity"> Entity type </typeparam>
        </member>
        <member name="M:DeliveryAPI.UnitOfWork.Interfaces.IGenericRepositoty`1.GetAll">
            <summary>
            Get all entity objects
            </summary>
            <returns> List of entity objects </returns>
        </member>
        <member name="M:DeliveryAPI.UnitOfWork.Interfaces.IGenericRepositoty`1.GetById(System.Guid)">
            <summary>
            Get entity by Id
            </summary>
            <param name="Id"> Object Id </param>
            <returns> One entity object </returns>
        </member>
        <member name="M:DeliveryAPI.UnitOfWork.Interfaces.IGenericRepositoty`1.Include(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>
            Include data from another database table
            </summary>
            <param name="includeProperties"> Include properties </param>
            <returns> A new query with the released data included </returns>
        </member>
        <member name="M:DeliveryAPI.UnitOfWork.Interfaces.IGenericRepositoty`1.AddAsync(`0)">
            <summary>
            Create a new entity object
            </summary>
            <param name="entity"> New entity object </param>
            <returns> New entity object </returns>
        </member>
        <member name="M:DeliveryAPI.UnitOfWork.Interfaces.IGenericRepositoty`1.UpdateAsync(`0)">
            <summary>
            Update a entity object
            </summary>
            <param name="entity"> Entity object </param>
            <returns> Task object containing updated entity object </returns>
        </member>
        <member name="M:DeliveryAPI.UnitOfWork.Interfaces.IGenericRepositoty`1.RemoveAsync(`0)">
            <summary>
            Remove entity object
            </summary>
            <param name="entity"> Entity object </param>
            <returns> Task object </returns>
        </member>
        <member name="T:DeliveryAPI.UnitOfWork.Interfaces.IUnitOfWork">
            <summary>
            An interface for class that implements the unit of work pattern
            and contains all entity repositories to create a single database context.
            </summary>
        </member>
        <member name="P:DeliveryAPI.UnitOfWork.Interfaces.IUnitOfWork.Deliveries">
            <summary>
            Interface for the delivery repository class containing methods for interaction with the database
            </summary>
        </member>
        <member name="P:DeliveryAPI.UnitOfWork.Interfaces.IUnitOfWork.Couriers">
            <summary>
            Interface for the courier repository class containing methods for interaction with the database
            </summary>
        </member>
        <member name="M:DeliveryAPI.UnitOfWork.Interfaces.IUnitOfWork.SaveChangesAsync">
            <summary>
            Save changes
            </summary>
            <returns> Task object </returns>
        </member>
        <member name="T:DeliveryAPI.UnitOfWork.UnitOfWork">
            <summary>
            The class that implements the unit of work pattern
            and contains all entity repositories to create a single database context.
            </summary>
        </member>
        <member name="F:DeliveryAPI.UnitOfWork.UnitOfWork._context">
            <summary>
            Database context
            </summary>
        </member>
        <member name="F:DeliveryAPI.UnitOfWork.UnitOfWork._disposed">
            <summary>
            True, if object is disposed
            False, if object isn't disposed
            </summary>
        </member>
        <member name="P:DeliveryAPI.UnitOfWork.UnitOfWork.Deliveries">
            <inheritdoc/>
        </member>
        <member name="P:DeliveryAPI.UnitOfWork.UnitOfWork.Couriers">
            <inheritdoc/>
        </member>
        <member name="M:DeliveryAPI.UnitOfWork.UnitOfWork.#ctor(DeliveryAPI.DataBase.Context)">
            <summary>
            Creates an instance of the <see cref="T:DeliveryAPI.UnitOfWork.UnitOfWork"/>.
            </summary>
            <param name="context"> Database context </param>
        </member>
        <member name="M:DeliveryAPI.UnitOfWork.UnitOfWork.SaveChangesAsync">
            <inheritdoc/>
        </member>
        <member name="M:DeliveryAPI.UnitOfWork.UnitOfWork.Dispose">
            <inheritdoc/>
        </member>
        <member name="M:DeliveryAPI.UnitOfWork.UnitOfWork.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:DeliveryAPI.UnitOfWork.UnitOfWork.ThrowIfDisposed">
            <summary>
            Throws if this class has been disposed.
            </summary>
        </member>
        <member name="T:OrderAPI.Exceptions.DeliveryStatusException">
            <summary>
            The exception that is throw when a delivery status error is detected
            </summary>
        </member>
        <member name="M:OrderAPI.Exceptions.DeliveryStatusException.#ctor">
            <summary>
            Creates an instance of the <see cref="T:OrderAPI.Exceptions.DeliveryStatusException"/>.
            </summary>
        </member>
        <member name="M:OrderAPI.Exceptions.DeliveryStatusException.#ctor(System.String)">
            <summary>
            Creates an instance of the <see cref="T:OrderAPI.Exceptions.DeliveryStatusException"/>.
            </summary>
            <param name="message"> Message </param>
        </member>
        <member name="M:OrderAPI.Exceptions.DeliveryStatusException.#ctor(System.String,System.String)">
            <summary>
            Creates an instance of the <see cref="T:OrderAPI.Exceptions.DeliveryStatusException"/>.
            </summary>
            <param name="message"> Message </param>
            <param name="paramName"> Param name </param>
        </member>
    </members>
</doc>
